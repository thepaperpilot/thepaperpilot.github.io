import{d as n}from"./chunks/git.data.ciS79EpD.js";import{M as o,q as i,Q as e,K as s,u as t,ag as r,p as h}from"./chunks/framework.BRLN2VOm.js";const l=e("h1",{class:"p-name"},"Guide to Incrementals/What is Content?",-1),c=["innerHTML"],u=r('<hr><details><summary>Referenced by:</summary><a href="/garden/incremental-social/index.md">Incremental Social</a><a href="/garden/kronos/index.md">Kronos</a></details><p>If you&#39;ve been in the incremental games community for any amount of time, you&#39;ll quickly find the number one thing players want is <em>content</em>. They want as much of it as possible! The most popular incremental games have tons of content, so they just keep stretching on and on and on, introducing mechanic after mechanic, and players love it. In fact, players seem to value the <em>amount</em> of content over the quality of any <em>specific</em> content. However, there&#39;s a bit of a lack of understanding concerning <em>what</em> content is, and I&#39;d like to explore what counts as content, and how we measure it. As a baseline definition, I think &quot;content&quot; can just be described as the parts of the game that engage the player, but to truly understand it we need to contextualize what that means and how it affects the gameplay experience.</p><p>To clarify the purpose of this page, my goal is not to get (too) nitpicky or to attack games with &quot;low content&quot;. There&#39;s nothing wrong with short / low-content games - I&#39;m quite a big fan of those games myself! This is mostly targeted toward those who <em>ask</em> for content and settle for &quot;long&quot; games, and those who <em>want</em> to provide content but want to make sure they&#39;re not just artificially inflating the game. Ultimately, I suppose the goal is to just reduce the amount of artificially inflated content for the sake of having a &quot;longer&quot; game.</p><h2 id="interaction" tabindex="-1">Interaction <a class="header-anchor" href="#interaction" aria-label="Permalink to &quot;Interaction&quot;">​</a></h2><p>I think it should be a fairly non-controversial opinion that time spent <em>solely</em> waiting should not count towards content. That is not including the time reading various effects or making decisions in your head, but rather time spent waiting for a condition to be met so you can re-engage with the game.</p><p>That is not to say games should necessarily try to minimize this time. Plenty of games lead towards more infrequent interaction and still get popular. In fact, these games appeal to many gamers who want to have something to check up on in between bursts of working on some other activity. These games seem to have fallen slightly out of fashion amongst modern incremental games, but they&#39;re still fully valid. The point I&#39;m trying to make here is just that this time is not content. As an extreme example, a game with no interactions and just a counter that goes up every second could safely be said to have 0 content beyond the time it takes to understand what&#39;s going on. If it has a list of &quot;goals&quot; to hit, then the time understanding those goals and a short time after achieving each one could be considered content, but not the idle times in between.</p><p>Let&#39;s take a look at the opposite end of the spectrum - interaction that is so frequent as to become mindless. This is any mechanic where you need to spam-click something to progress. This may be a more controversial take, but I do not believe this constitutes content either. It does not engage the player, because each consecutive click blends together and they do not individually change the gameplay experience. That is to say, a single click and 100 clicks are not meaningfully different in terms of engaging the player. I&#39;d go as far as to say clicking 100 times would be actively <em>worse</em>, as it&#39;s artificially delaying the next piece of actual content, alongside the issues of accessibility and potentially causing RSI.</p><h3 id="repeatable-purchases" tabindex="-1">Repeatable Purchases <a class="header-anchor" href="#repeatable-purchases" aria-label="Permalink to &quot;Repeatable Purchases&quot;">​</a></h3><p>Imagine an entity in a game that you can purchase multiple times, each time it performs the same thing but for a higher cost. These are incredibly common, from the buildings in <a href="https://orteil.dashnet.org/cookieclicker/" target="_blank" rel="noreferrer">cookie clicker</a> to the units in <a href="https://www.swarmsim.com/" target="_blank" rel="noreferrer">swarm sim</a> to the IP and EP multipliers in <a href="https://ivark.github.io/" target="_blank" rel="noreferrer">antimatter dimensions</a>. However, how much content is each specific purchase? Is it content beyond the first purchase? Does it have diminishing returns? What if you are oscillating between two different repeatable purchases? How much content is lost when you <a href="/garden/guide-to-incrementals/what-is-content/#665cf570-e3d3-48f6-9fde-aa94e68a8682">automate</a> away a repeatable purchase?</p><p>I don&#39;t want to take too harsh a stance against repeatable purchases. They&#39;re useful tools and can be used in a myriad of interesting ways. I feel they do become &quot;stale&quot; or less meaningful content over time, and this happens exponentially quickly the more frequently it can be purchased. A classic example that I believe goes too far is the IP/EP multipliers in Antimatter Dimensions. I would go as far as to say they are a chore and do not provide any meaningful content after you&#39;ve bought them a couple of times. It&#39;s a method for inflating numbers (effectively making every OOM a 5x step instead of 10x), that punishes the player progression-wise whenever they forget to max it again, and eventually gets automated away as a <em>reward</em> to the player for making enough progress.</p><p>Just to voice the other side of this argument, Acamaeda defended the IP multiplier as giving the player a &quot;good&quot; upgrade every OOM. I can understand that to a point and need to clarify I&#39;m mainly criticizing IP/EP multipliers after they&#39;ve been introduced for a while. In fact, I would defend the multipliers for a short while after they&#39;re introduced using the same logic I would use to defend normal dimensions as repeatable purchases, at least pre-infinity. There&#39;s &quot;content&quot; to be had in looking at what dimensions will become affordable next, and then choosing which to buy amongst those. The IP/EP multipliers, early into infinity or eternity respectively, provide another option that gets put into that mental queue of things to buy with each OOM reached - although the optimal order is often quite trivial and not particularly engaging.</p><p>The IP/EP multipliers are not the only repeatable purchase in antimatter dimensions I take offense to. The time dimensions are also a series of repeatable purchases, that are all so similar and static that it doesn&#39;t take long before you never need to put any thought into buying them, how much you&#39;re buying at once, or the order you buy them in - you just press max all and move on. The entire tab could&#39;ve been just the max all button and it would not have made a difference beyond the start of the eternity layer. The normal dimensions technically have this problem as well, but since you&#39;re constantly getting antimatter the order feels like it has a larger impact and it&#39;s more meaningful content, right up until they&#39;re automated away. Infinity dimensions are a compromise between the two, so I&#39;m highlighting time dimensions here as the <em>most</em> egregious.</p><h2 id="following-instructions" tabindex="-1">Following Instructions <a class="header-anchor" href="#following-instructions" aria-label="Permalink to &quot;Following Instructions&quot;">​</a></h2><p>We&#39;re getting more and more controversial as we go along! Let&#39;s talk about how linear content is not content now (in some circumstances). A trend in incremental games is adding difficulty by adding a web of effects that abstract the true change you can expect from any specific purchase or decision you make. If a game is both linear and sufficiently abstracts the effect of player decisions, then the player will no longer be engaging with the content - they&#39;ll simply be clicking on things as they become available. This isn&#39;t necessarily a <em>bad</em> thing, as plenty of players don&#39;t mind this style of gameplay, but I&#39;d argue once you reach a point where players <em>don&#39;t bother reading the effects</em>, those interactions are no longer truly content. Note that unlike the previous qualifiers mentioned, this qualifier is based on the player, and therefore subjective. In effect, it&#39;s a spectrum where the more complicated the web of effects becomes, the more likely it is to disengage the player.</p><p>This over-complicatedness leading to disengaging the player can <em>also</em> happen from non-linear gameplay. If the web of effects becomes sufficiently complicated and finding the optimal progression route too time-consuming to discover, players will seek out guides from other players who&#39;ve completed the game. The <em>second</em> they do this, the game effectively becomes linearly following the instructions of the guide and all the above criticisms apply. Similarly to as before, though, this is a spectrum and not everyone will seek out a guide at the same level of difficulty.</p><p><span id="665cf570-e3d3-48f6-9fde-aa94e68a8682"><h2>Automation</h2></span></p><p>Automation is a staple of the genre, but it has certain implications for the design of the game. Why, when new content is introduced, must the older content be automated away - why is it a chore and it feels rewarding to not have to do it again? Why does the new mechanic have such appeal if we know it too will just be automated away later on, and we&#39;ll be happy when that happens? It honestly begs the question of why this framework of introducing content and automating the old content is even enjoyable - and nearly nonexistent in other genres. You&#39;re not going to reach a point in a platformer game where they just automate the jumping part - <em>that&#39;s the core mechanic!</em> Instead, platformers either add new mechanics that <em>build</em> on the core mechanic or at least re-contextualize the core mechanic. However, in incremental games new content very frequently means <em>replacing</em> older content, as opposed to augmenting it.</p><p>Admittedly, the above paragraph ignores the obvious answer that separates incremental games in this regard. These mechanics <em>become</em> chores as their frequency increases. The frequency increases to give a sense of progression, and automation is seen as a reward because it now manages what was becoming unmanageable. The new content then comes in and continues the loop to give a stronger sense of progression. That&#39;s all good and a fine justification for automating content instead of building upon the base mechanic. It&#39;s also <em>much</em> easier to design, as each layer essentially lets you start over instead of needing to think of ideas that conform to the original core mechanic.</p><p>So, what&#39;s the problem? Even if this trend is justified and easy to implement, there are some other effects it has on the game design. First off, and this is probably a neutral point, incremental games with this cycle of replacing old mechanics with new ones trend towards more and more abstract and further away from any narrative throughline as they add layers. There are only so many justifications for resetting progress, so if a game wants to have several of these layers they&#39;re inevitably going to become generic or increasingly loosely associated with the original content. It&#39;s most unfortunate, in my opinion when an interesting or innovative core mechanic gets fully automated once a generic &quot;prestige&quot; layer is unlocked.</p><p>A recent example is <a href="https://mrredshark77.github.io/Really-Grass-Cutting-Incremental/" target="_blank" rel="noreferrer">Really Grass Cutting Incremental</a>, an incremental game about cutting grass (although I&#39;m really criticizing the Roblox game it&#39;s based on). Except, it doesn&#39;t <em>continue</em> to be about cutting grass. After you buy enough upgrades to increase your grass cutting and level up sufficiently you &quot;prestige&quot;, an abstract term that in this case means you reset all your progress to get some currency to buy upgrades that do the same things as the original upgrades, but these won&#39;t reset on future prestiges. You&#39;ll eventually be able to &quot;crystallize&quot;, which means you reset all your progress to get some currency to buy upgrades that do the same things as the original upgrades (and a couple of new ones) and won&#39;t reset on future crystallizes. Fine. You&#39;ll progress a bit, complete some challenges, and finally get to... grasshop? Grasshopping is this mechanic where you reset all your progress to get some resource that <em>isn&#39;t</em> for buying upgrades - this time you just unlock different modifiers on everything based on their amount. You may have gotten the point by now, but there are also &quot;steelie&quot; resets which give you steel for some reason, before unlocking a factory with various machines - none of which are directly tied to cutting grass, and start gathering things like oil and reset for rocket parts and reset to go to space and so on and so on. Throughout all of this there is absolutely no narrative justification or throughline for the direction the game is going, or why cutting grass is still relevant when we&#39;re collecting things like rocket parts. I may be going a little hard on GCI, but it is far from alone.</p><h2 id="ending-the-game" tabindex="-1">Ending the Game <a class="header-anchor" href="#ending-the-game" aria-label="Permalink to &quot;Ending the Game&quot;">​</a></h2><p>Incremental games do not often have a planned out narrative or ending,, such that each content update is approached as its own unit of narrative and gameplay. This prevents content updates from wrapping up the game nicely - it always has to leave something open for another content layer; be it another mechanic, reset layer, etc. This cycle will continue until the updates just stop, at which point the game will just have an unsatisfying conclusion that will never get the next thing it was supposed to be leading into. This reminds me of a Leonardo Da Vinci quote about how <a href="/garden/art-is-never-complete/">Art is Never Complete</a>:</p><blockquote><p>Art is never finished, only abandoned. - Leonardo Da Vinci</p></blockquote><p>For what its worth, there are exceptions here (including several of <a href="/garden/my-projects/">My Projects</a>). I believe this practice is actually fairly reasonable, considering how many incremental game developers are learning game design and programming - keeping the scope small and expanding if it still interests you is a great way to keep learning without letting things like perfectionism or sunk cost fallacies get in the way.</p><h2 id="tips-for-developers" tabindex="-1">Tips for Developers <a class="header-anchor" href="#tips-for-developers" aria-label="Permalink to &quot;Tips for Developers&quot;">​</a></h2><p>If you&#39;re a developer, by this point you should have a pretty decent idea of how to create &quot;true&quot; content in your game. Here are some other specific tips I&#39;d suggest:</p><p>An upgrade that simply unlocks another upgrade trivially isn&#39;t content. However, many games have an upgrade that just unlocks a feature, which then has a wait or other requirements before it can be used. Try to make sure when you unlock a feature, there is immediately something to do with the feature - for example, perhaps give them a small amount of the new currency it unlocks, if applicable.</p><p>If you don&#39;t have a large web of effects, and can definitively say the impact of a purchase is to multiply the gain of the cost currency by N, and the <em>next</em> purchase costs N times the amount of that same currency, then this purchase effectively made no difference and it may have made more sense to just go directly to the next upgrade. That said, having effects based on things like the number of purchases made will quickly invalidate this tip.</p>',29),b=JSON.parse('{"title":"Guide to Incrementals/What is Content?","description":"","frontmatter":{"public":"true","slug":"guide-to-incrementals/what-is-content-","title":"Guide to Incrementals/What is Content?","prev":false,"next":false},"headers":[],"relativePath":"guide-to-incrementals/ludology/content/index.md","filePath":"guide-to-incrementals/ludology/content/index.md"}'),m={name:"guide-to-incrementals/ludology/content/index.md"},w=Object.assign(m,{setup(d){const a=o();return(g,p)=>(h(),i("div",null,[l,e("p",null,[s("2272 words, ~12 minute read. "),e("span",{innerHTML:t(n)[`site/${t(a).page.value.relativePath}`]},null,8,c)]),u]))}});export{b as __pageData,w as default};
