import{_ as e,o as a,c as t,Q as r}from"./chunks/framework.1169fbc9.js";const b=JSON.parse('{"title":"Projects","description":"","frontmatter":{"title":"Projects","lastUpdated":false},"headers":[],"relativePath":"projects/index.md","filePath":"projects/index.md","lastUpdated":1697384825000}'),o={name:"projects/index.md"},s=r('<h1 id="games" tabindex="-1">Games! <a class="header-anchor" href="#games" aria-label="Permalink to &quot;Games!&quot;">​</a></h1><p>I make games regularly! Check them out in the sidebar or on my <a href="https://thepaperpilot.itch.io/" target="_blank" rel="noreferrer">itch.io</a> page.</p><h1 id="profectus" tabindex="-1">Profectus! <a class="header-anchor" href="#profectus" aria-label="Permalink to &quot;Profectus!&quot;">​</a></h1><p>I contributed to a modding framework called The Modding Tree and then made <a href="https://moddingtree.com" target="_blank" rel="noreferrer">Profectus</a> as an alternative that gives developers more control. Profectus is a game engine for the web that uses TS and Vue.</p><h1 id="v-ecs" tabindex="-1"><a href="./vecs/">V-ecs!</a> <a class="header-anchor" href="#v-ecs" aria-label="Permalink to &quot;[V-ecs!](./vecs/)&quot;">​</a></h1><p>V-ecs (pronounced &quot;Vex&quot;) is a Vulkan-based engine I made for making highly moddable games and tools in Lua centered around the ECS design pattern and a work-stealing job system.</p><h1 id="optispeech" tabindex="-1"><a href="./optispeech/">OptiSpeech!</a> <a class="header-anchor" href="#optispeech" aria-label="Permalink to &quot;[OptiSpeech!](./optispeech/)&quot;">​</a></h1><p>I led a team updating a legacy Unity project for research on speech therapy to use a modern version with a focus on extensibility to facilitate future maintenance and features.</p><h1 id="babble-buds" tabindex="-1"><a href="./babble/">Babble Buds!</a> <a class="header-anchor" href="#babble-buds" aria-label="Permalink to &quot;[Babble Buds!](./babble/)&quot;">​</a></h1><p>Babble Buds is a free, open-source virtual puppet show engine I made for various platforms including HTLM5 and Unity, as well as an accompanying electron-based puppet editor and multiplayer stage.</p><h1 id="dice-armor" tabindex="-1"><a href="./dice/">Dice Armor</a> <a class="header-anchor" href="#dice-armor" aria-label="Permalink to &quot;[Dice Armor](./dice/)&quot;">​</a></h1><p>I was the lead programmer on a team of nine creating this game in a semester-long college course. I programmed all the gameplay systems as well as incorporated Babble Buds for the cutscenes and tutorial.</p><h1 id="capture-the-citadel" tabindex="-1"><a href="./citadel/">Capture the Citadel</a> <a class="header-anchor" href="#capture-the-citadel" aria-label="Permalink to &quot;[Capture the Citadel](./citadel/)&quot;">​</a></h1><p>A 3D VR re-envisioning of a Slay the Spire-style game by Anthony Lawn and Grant Barbee.</p>',14),i=[s];function n(c,d,l,h,p,u){return a(),t("div",null,i)}const f=e(o,[["render",n]]);export{b as __pageData,f as default};
